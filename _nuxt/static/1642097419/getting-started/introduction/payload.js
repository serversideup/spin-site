__NUXT_JSONP__("/getting-started/introduction", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S){return {data:[{document:{slug:"introduction",description:"",title:"Introduction & Concepts",position:r,category:"Getting Started",benefits:["That's much easier to type than 65 characters!","Spin follows the same Docker syntax","It's easy to onboard people to your team (people don't need to relearn custom aliases for your team if they are already familiar with Docker)"],toc:[{id:z,depth:r,text:"Why use spin?"},{id:A,depth:r,text:"How spin works"},{id:B,depth:r,text:C},{id:D,depth:3,text:E},{id:F,depth:r,text:"Do I run spin in production?"},{id:G,depth:r,text:"Can I use spin if I don't run Docker in \"Swarm Mode\" in production?"},{id:H,depth:r,text:"Where is spin installed?"}],body:{type:"root",children:[{type:b,tag:s,props:{id:z},children:[{type:b,tag:i,props:{href:"#why-use-spin",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Why use "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:"?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Spin is created to simplify the replication of your production environment and enable you to manage your infrastructure dependencies from a single file."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The days of \"make sure to update this on your machine\" are over. Commit once, and deploy that change to everyone."}]},{type:a,value:c},{type:b,tag:s,props:{id:A},children:[{type:b,tag:i,props:{href:"#how-spin-works",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"How "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" works"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Spin simply is a \"wrapper script\" that shortens the syntax of official Docker commands. Spin dramatically improves the developer experience of while using Docker without abandoning a standardized protocol."}]},{type:a,value:c},{type:b,tag:s,props:{id:B},children:[{type:b,tag:i,props:{href:"#docker-overrides",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The most powerful concept we embrace is the use of "},{type:b,tag:i,props:{href:"https:\u002F\u002Fdocs.docker.com\u002Fcompose\u002Fextends\u002F",rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:"Docker Overrides"}]},{type:a,value:". This allows you to have multiple files and override your base file, depending what environment you are in."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"For example, let's say our project directory has these three files:"}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{className:[w,"language-text"]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"\u002Fmy-project\nâ”œâ”€â”€ docker-compose.yml\nâ”œâ”€â”€ docker-compose.dev.yml\nâ””â”€â”€ docker-compose.prod.yml\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"We can use "},{type:b,tag:g,props:{},children:[{type:a,value:I}]},{type:a,value:" as our base file, then "},{type:b,tag:g,props:{},children:[{type:a,value:J}]},{type:a,value:" as our \"override\". This will essentially merge the files."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"To do that, we need to run:"}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{className:[w,K]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"docker compose -f docker-compose.yml -f docker-compose.dev.yml up\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"This will call the files in order and \"merge\" them together:"}]},{type:a,value:c},{type:b,tag:"img",props:{src:"docker-overrides.png",alt:"Docker Overrides Diagram"},children:[]},{type:a,value:c},{type:b,tag:x,props:{id:"our-expected-result-for-development"},children:[{type:b,tag:i,props:{href:"#our-expected-result-for-development",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Our Expected Result for Development"}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{className:[w,"language-yaml"]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:"version"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:L},{type:b,tag:d,props:{className:[e,"number"]},children:[{type:a,value:"3.8"}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:"services"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:"php"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:N},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:O}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:" serversideup\u002Fphp"},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:"8.1"},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:P}]},{type:a,value:"fpm"},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:P}]},{type:a,value:"nginx\n    "},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:"environment"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:"\n        "},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:"PRODUCTION"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:L},{type:b,tag:d,props:{className:[e,"string"]},children:[{type:a,value:"\"false\""}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:"node"}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:N},{type:b,tag:d,props:{className:[e,p,q]},children:[{type:a,value:O}]},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:" node"},{type:b,tag:d,props:{className:[e,h]},children:[{type:a,value:n}]},{type:a,value:"lts\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Cool, but that's "},{type:b,tag:y,props:{},children:[{type:a,value:"a lot"}]},{type:a,value:" to type every morning when you jump on the computer!"}]},{type:a,value:c},{type:b,tag:"h3",props:{id:D},children:[{type:b,tag:i,props:{href:"#spin-simplifies-the-development-workflow",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Instead of typing 65 characters everytime or having people come up with their own whacky aliases, "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" simplifies and follows the Docker standard:"}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{className:[w,K]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"spin up\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"There are tons of benefits to this:\n"},{type:b,tag:"list",props:{":items":"benefits"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"That's not all, there are a ton of other actions that you can run to simplify your development workflow. See the \"Command Reference\" section on the documentation navigation."}]},{type:a,value:c},{type:b,tag:s,props:{id:F},children:[{type:b,tag:i,props:{href:"#do-i-run-spin-in-production",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Do I run "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" in production?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Honestly, we don't recommend it. The less moving parts you have in production, the better."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The goal of "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" is to simplify the human experience. For your CI stuff, just use the longer commands directly from Docker. A CI runner doesn't mind typing in long commands every single time. ðŸ˜ƒ"}]},{type:a,value:c},{type:b,tag:s,props:{id:G},children:[{type:b,tag:i,props:{href:"#can-i-use-spin-if-i-dont-run-docker-in-swarm-mode-in-production",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Can I use "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" if I don't run Docker in \"Swarm Mode\" in production?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Of course! Although you might be missing the full benefits of running full Docker in production, using Spin in development may help solve a lot of problems for managing a fleet of development machines."}]},{type:a,value:c},{type:b,tag:s,props:{id:H},children:[{type:b,tag:i,props:{href:"#where-is-spin-installed",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Where is "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" installed?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"We offer two areas where Spin can be installed:"}]},{type:a,value:c},{type:b,tag:x,props:{id:"at-the-user-level"},children:[{type:b,tag:i,props:{href:"#at-the-user-level",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:Q},{type:b,tag:y,props:{},children:[{type:a,value:"user"}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Users can install this on their system "},{type:b,tag:"strong",props:{},children:[{type:a,value:"without root permissions"}]},{type:a,value:" being requested. The benefit with this installation is that users will be able to use "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" from anywhere on their system. As long as the alias is configured in their bash profile and there is a "},{type:b,tag:g,props:{},children:[{type:a,value:I}]},{type:a,value:" and "},{type:b,tag:g,props:{},children:[{type:a,value:J}]},{type:a,value:" in the folder, spin will work."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"The other major advantage is "},{type:b,tag:g,props:{},children:[{type:a,value:o}]},{type:a,value:" will intelligently check for updates to make sure everyone is always on the latest version."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"See the installation instructions on how to install spin on the system at the user level."}]},{type:a,value:c},{type:b,tag:x,props:{id:"at-the-project-level"},children:[{type:b,tag:i,props:{href:"#at-the-project-level",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:Q},{type:b,tag:y,props:{},children:[{type:a,value:"project"}]},{type:a,value:R}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"On larger projects or open source projects, having everyone configure their machines with a system dependency can be a nightmare. Instead of having each user go through steps manually, you can include spin as a dependency via "},{type:b,tag:g,props:{},children:[{type:a,value:"npm\u002Fyarn"}]},{type:a,value:" or "},{type:b,tag:g,props:{},children:[{type:a,value:"composer"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"This will give the project manager control of the exact version of spin to run on everyone's machine."}]}]},dir:"\u002Fen\u002Fgetting-started",path:"\u002Fen\u002Fgetting-started\u002Fintroduction",extension:".md",createdAt:S,updatedAt:S,to:"\u002Fgetting-started\u002Fintroduction"},prev:{title:"Spin",path:"\u002Fen\u002Findex",to:"\u002F"},next:{title:"Comparisons",path:"\u002Fen\u002Fgetting-started\u002Fcomparisons",to:"\u002Fgetting-started\u002Fcomparisons"}}],fetch:{},mutations:[]}}("text","element","\n","span","token","p","code","punctuation","a","true",-1,"icon","icon-link",":","spin","key","atrule",2,"h2","div","nuxt-content-highlight","pre","line-numbers","h4","em","why-use-spin","how-spin-works","docker-overrides","Docker overrides","spin-simplifies-the-development-workflow","Spin simplifies the development workflow","do-i-run-spin-in-production","can-i-use-spin-if-i-dont-run-docker-in-swarm-mode-in-production","where-is-spin-installed","docker-compose.yml","docker-compose.dev.yml","language-bash"," ","\n  ","\n    ","image","-","At the "," level","2022-01-13T18:09:17.860Z")));